<launch>
    <!-- Launch Arguments -->
    <arg name="robot_file"                      default="$(find serpent)/config/robot_default.yaml"/>
    <arg name="mission_file"                    default="$(find serpent)/config/mission_default.yaml"/>
    <arg name="filter_file"                     default="$(find serpent)/config/filter_default.yaml"/>
    <arg name="format_file"                     default="$(find serpent)/config/format_default.yaml"/>
    <arg name="normal_estimation_file"          default="$(find serpent)/config/normal_estimation_default.yaml"/>
    <arg name="tuning_file"                     default="$(find serpent)/config/tuning_default.yaml"/>
    <arg name="debug_file"                      default="$(find serpent)/config/debug_default.yaml"/>
    <arg name="threads"                         default="4"/>

    <!-- Visualisation Arguments -->
    <arg name="rviz"                            default="false"/>
    <arg name="rqt"                             default="true"/>
    <arg name="rqt_stereo"                      default="false"/>

    <!-- Debugging Arguments -->
    <arg name="use_gdb"                         default="false"/>
    <arg name="use_callgrind"                   default="false"/>
    <env name="ROSCONSOLE_FORMAT" value="[${node}] [${function}:${line}]: ${message}"/>

    <!-- Rosbag Playback Arguments-->
    <arg name="use_sim_time" default="false"/>
    <param if="$(arg use_sim_time)" name="use_sim_time" value="true"/> 

    <!-- Debugging -->
    <arg name="program_name" value="serpent_backend"/>
    <arg if="$(arg use_gdb)" name="launch_prefix" value="gdb -ex run --args"/>
    <arg if="$(eval arg('use_callgrind') and not arg('use_gdb'))" name="launch_prefix"
            value="valgrind --tool=callgrind --callgrind-out-file='callgrind.$(arg program_name).%p'"/>
    <arg unless="$(eval arg('use_gdb') or arg('use_callgrind'))" name="launch_prefix" value=""/>
    <env name="GMON_OUT_PREFIX" value="$(arg program_name)" />

    <!-- Parameter Configuration -->
    <!-- Robot -->
    <rosparam ns="serpent" if="$(eval robot_file != '')"             file="$(arg robot_file)"/>
    <!-- Mission -->
    <rosparam ns="serpent" if="$(eval mission_file != '')"           file="$(arg mission_file)"/>
    <!-- Filter -->
    <rosparam ns="serpent" if="$(eval filter_file != '')"            file="$(arg filter_file)"/>
    <!-- Format -->
    <rosparam ns="serpent" if="$(eval format_file != '')"            file="$(arg format_file)"/>
    <!-- Normal Estimation -->
    <rosparam ns="serpent" if="$(eval normal_estimation_file != '')" file="$(arg normal_estimation_file)"/>
    <!-- Tuning -->
    <rosparam ns="serpent" if="$(eval tuning_file != '')"            file="$(arg tuning_file)"/>
    <!-- Debug -->
    <rosparam ns="serpent" if="$(eval debug_file != '')"             file="$(arg debug_file)"/>
    <!-- Other Parameters -->
    <rosparam ns="serpent" subst_value="true">
        threads: $(arg threads)
    </rosparam>

    <node pkg="serpent" type="serpent_backend_node" name="$(arg program_name)" output="screen"
            launch-prefix="$(arg launch_prefix)"/>

    <!-- RVIZ -->
    <node if="$(arg rviz)" pkg="rviz" type="rviz" name="serpent_rviz" args="-d $(find serpent)/rviz/serpent.rviz"/>

    <!-- RQT -->
    <node if="$(arg rqt)" pkg="rqt_gui" type="rqt_gui" name="serpent_rqt" output="screen"
            args="--perspective-file $(find serpent)/perspective/serpent.perspective"/>

    <!-- RQT Stereo -->
    <node if="$(arg rqt_stereo)" pkg="rqt_gui" type="rqt_gui" name="serpent_rqt_stereo" output="screen"
            args="--perspective-file $(find serpent)/perspective/serpent_stereo_pipeline.perspective"/>
</launch>
