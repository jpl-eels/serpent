<launch>
    <arg name="body_frame"  default="base_link"/>
    <arg name="lidar_frame" default="os_sensor"/>
    <arg name="imu_frame"   default="ins"/>
    <arg name="half_stereo_baseline"            default="0.02"/>
    <arg name="left_stereo_frame"               default="left_stereo"/>
    <arg name="left_stereo_left_cam_frame"      default="left_stereo_left_cam"/>
    <arg name="left_stereo_right_cam_frame"     default="left_stereo_right_cam"/>
    <arg name="right_stereo_frame"              default="right_stereo"/>
    <arg name="right_stereo_left_cam_frame"     default="right_stereo_left_cam"/>
    <arg name="right_stereo_right_cam_frame"    default="right_stereo_right_cam"/>
    <arg name="front_stereo_frame"              default="front_stereo"/>
    <arg name="front_stereo_left_cam_frame"     default="front_stereo_left_cam"/>
    <arg name="front_stereo_right_cam_frame"    default="front_stereo_right_cam"/>
    <arg name="up_stereo_frame"                 default="up_stereo"/>
    <arg name="up_stereo_left_cam_frame"        default="up_stereo_left_cam"/>
    <arg name="up_stereo_right_cam_frame"       default="up_stereo_right_cam"/>
    
    <!-- These transforms come frome the serpent/snowboard.yaml
        Note the order of arguments as one of:
            x y z yaw pitch roll frame child_frame
            x y z qx qy qz qw frame child_frame
    -->

    <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_lidar"
        args="0.60 0.04 0 0 0 0 1 $(arg body_frame) $(arg lidar_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_imu"
        args="0 0 0 0 -0.9981348 0 0.0610485 $(arg body_frame) $(arg imu_frame)"/>

    <!-- x-forward, y-left, z-up -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_left_stereo"
        args="0.45 0.05 0.05 0 0 0.7071068 0.7071068 $(arg body_frame) $(arg left_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="left_stereo_to_left_cam"
        args="0 $(arg half_stereo_baseline) 0 0 0 0 1 $(arg left_stereo_frame) $(arg left_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="left_stereo_to_right_cam"
        args="0 -$(arg half_stereo_baseline) 0 0 0 0 1 $(arg left_stereo_frame) $(arg left_stereo_right_cam_frame)"/> -->

    <!-- x-forward, y-left, z-up -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_left_stereo"
        args="0.45 0.05 0.05 -0.7071068, 0, 0, 0.7071068 $(arg body_frame) $(arg left_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="left_stereo_to_left_cam"
        args="-$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg left_stereo_frame) $(arg left_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="left_stereo_to_right_cam"
        args="$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg left_stereo_frame) $(arg left_stereo_right_cam_frame)"/>

    <!-- x-forward, y-left, z-up -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_right_stereo"
        args="0.45 -0.05 0.05 0 0 -0.7071068 0.7071068 $(arg body_frame) $(arg right_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="right_stereo_to_left_cam"
        args="0 $(arg half_stereo_baseline) 0 0 0 0 1 $(arg right_stereo_frame) $(arg right_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="right_stereo_to_right_cam"
        args="0 -$(arg half_stereo_baseline) 0 0 0 0 1 $(arg right_stereo_frame) $(arg right_stereo_right_cam_frame)"/> -->

    <!-- x-forward, y-left, z-up -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_right_stereo"
        args="0.45 -0.05 0.05 0 -0.7071068 0.7071068 0 $(arg body_frame) $(arg right_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="right_stereo_to_left_cam"
        args="-$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg right_stereo_frame) $(arg right_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="right_stereo_to_right_cam"
        args="$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg right_stereo_frame) $(arg right_stereo_right_cam_frame)"/>

    <!-- x-forward, y-left, z-up -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_front_stereo"
        args="0.5 0 0.05 0 0 0 1 $(arg body_frame) $(arg front_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="front_stereo_to_left_cam"
        args="0 $(arg half_stereo_baseline) 0 0 0 0 1 $(arg front_stereo_frame) $(arg front_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="front_stereo_to_right_cam"
        args="0 -$(arg half_stereo_baseline) 0 0 0 0 1 $(arg front_stereo_frame) $(arg front_stereo_right_cam_frame)"/> -->
    
    <!-- x-right, y-down, z-forward -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_front_stereo"
        args="0.5 0 0.05 -0.5 0.5 -0.5 0.5 $(arg body_frame) $(arg front_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="front_stereo_to_left_cam"
        args="-$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg front_stereo_frame) $(arg front_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="front_stereo_to_right_cam"
        args="$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg front_stereo_frame) $(arg front_stereo_right_cam_frame)"/>
    
    
    <!-- TODO: up stereo -->
    <!-- x-right, y-down, z-forward -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="body_to_up_stereo"
        args="0.45 0 0.1 0 0 0 1 $(arg body_frame) $(arg up_stereo_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="up_stereo_to_left_cam"
        args="-$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg up_stereo_frame) $(arg up_stereo_left_cam_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="up_stereo_to_right_cam"
        args="$(arg half_stereo_baseline) 0 0 0 0 0 1 $(arg up_stereo_frame) $(arg up_stereo_right_cam_frame)"/>
    

</launch>
